/* First level: Необходимо реализовать функционал по добавлению и удалению пользователей.
Задан массив users, элементы которого передают свойства объекта
Пример:
let users = [
    { id: 1, name: 'Alex', lastname: 'Folon', age: 24 },
    { id: 1, name: 'Willyam', lastname: 'Maxwell', age: 31 },
]


Реализуйте следующие функции:


1) Добавление пользователей в массив, используя аргументы(id, name, lastname, age)
2) Изменение данных пользователей.Функция должна передавать все аргументы(id, name, lastname, age)(Подсказка: реализовать поиск через id)
3) Удаление пользователей.Функция должна получить только id.В функции необходимо предусмотреть случай, когда переданный аргумент не будет найден среди users.


Продемонстрируйте функционал на примере добавления, изменения и удаления данных пользователей вызывая функции с произвольными данными


    (Если есть вопросы по заданию - обязательно пишите в чат)
Примечание: функции ничего не должны возвращать.В теле функции необходимо продемонстрировать взаимодействие с массивом users.


Second level: Предусмотрите процесс, который будет автоматически заполнять атрибут id, не используя его в качестве аргумента при добавлении очередного пользователя. */

let users = [
    { id: 1, name: 'Alex', lastname: 'Folon', age: 24 },
    { id: 2, name: 'Willyam', lastname: 'Maxwell', age: 31 },
]

function addUser(id, name, lastname, age) {
    users.push({id:id, name: name, lastname: lastname, age: age})
}

function updateUser(id, name, lastname, age) {
    let find = users.findIndex(elem => elem.id = id)    

}

addUser(3, 'Sergiu', 'Capatin', 32)
updateUser(3, 'Capatin', 'Sergiu', 23)
console.log(users);
